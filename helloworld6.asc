sync helloworld6 ()
    vars: result
    children: [hello world self]
    connections: [
	[:self/:in] [[hello/:in]]
	[hello/:out] [[world/:in]]
	[world/result] [[:self/result]]
    ]

    child hello
        on :in
	    (format *standard-output* "hello~%")
	    (send '(hello :out) t message parts)

    child world
        on :in
	    (format *standard-output* "world~%")
	    (send-sync '(world result) "the end" message parts)

    self
        on :in
	    (default-container-handler message message parts)
	on result
	    (setf result (message-data message))
	    (concluded)

    main
        (not-concluded)
	(send '(:self :in) t nil parts)
	(route-messages connections parts parts)
	(dispatch parts connections conclude-predicate)
	result